{"pageProps":{"doc":{"title":"Modal","description":"Creating Modal using Denocord","image":"/images/logo.png","body":{"raw":"\nSince the release of Slash commads, developers find it difficult to take long input from users.\n\nModals is used to solve this problem.\n\nModal allows you to take input of maximum 4000 characters. \n\n![Modal](/docs/modalFromDiscord.png)\n\nSource:Discord\n\n\n<H4>Code Example</H4>\n\n```ts\nimport {Modal,TextInput} from \"https://deno.land/x/denocordts/mod.ts\"\n\nconst modal = new Modal();\n    modal\n      .setTitle(\"Test Modal\")\n      .setCustomId(\"modal\")\n      .addComponents(\n        new TextInput()\n          .setCustomId(\"test\")\n          .setLabel(\"Hmmm\")\n          .setRequired(true)\n          .setPlaceholder(\"Testing Goes brrr\")\n          .setStyle(\"Short\")\n      );\n    await interaction.showModal(modal);\n```\n\nModals can only be shown by `showModal` method present on `ApplicationCommandInteraction` and `ComponentInteraction` class.\n\nTo receive Modal interactions you should listen to `CommandInteraction` event and check for `interaction.isModalSubmit`, You should close the modal manually by using `closeModal` method, the `interaction.getModalValues()` will provide you with all the details users submitted in the format given below\n\n```ts\ntype ModalValues = {\n    customId:string,\n    type:number,\n    value:string\n}[]\n```\nThe `interaction.getModalValues()` will provide you with an array of values, this will follow the order of the `TextInput` components supplied to `Modal.addComponents`. The `value` will contain the content supplied by the user.\n\n","code":"var Component=(()=>{var r=Object.create;var c=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var p=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var j=(n,l)=>()=>(l||n((l={exports:{}}).exports,l),l.exports),g=(n,l)=>{for(var a in l)c(n,a,{get:l[a],enumerable:!0})},i=(n,l,a,s)=>{if(l&&typeof l==\"object\"||typeof l==\"function\")for(let t of m(l))!u.call(n,t)&&t!==a&&c(n,t,{get:()=>l[t],enumerable:!(s=h(l,t))||s.enumerable});return n};var N=(n,l,a)=>(a=n!=null?r(p(n)):{},i(l||!n||!n.__esModule?c(a,\"default\",{value:n,enumerable:!0}):a,n)),f=n=>i(c({},\"__esModule\",{value:!0}),n);var d=j((k,o)=>{o.exports=_jsx_runtime});var b={};g(b,{default:()=>y,frontmatter:()=>w});var e=N(d()),w={title:\"Modal\",description:\"Creating Modal using Denocord\"};function _(n={}){let{wrapper:l}=n.components||{};return l?(0,e.jsx)(l,Object.assign({},n,{children:(0,e.jsx)(a,{})})):a();function a(){let s=Object.assign({p:\"p\",img:\"img\",pre:\"pre\",code:\"code\",span:\"span\"},n.components),{H4:t}=s;return t||M(\"H4\",!0),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(s.p,{children:\"Since the release of Slash commads, developers find it difficult to take long input from users.\"}),`\n`,(0,e.jsx)(s.p,{children:\"Modals is used to solve this problem.\"}),`\n`,(0,e.jsx)(s.p,{children:\"Modal allows you to take input of maximum 4000 characters.\"}),`\n`,(0,e.jsx)(s.p,{children:(0,e.jsx)(s.img,{src:\"/docs/modalFromDiscord.png\",alt:\"Modal\"})}),`\n`,(0,e.jsx)(s.p,{children:\"Source:Discord\"}),`\n`,(0,e.jsx)(t,{children:\"Code Example\"}),`\n`,(0,e.jsx)(s.pre,{className:\"language-ts\",children:(0,e.jsxs)(s.code,{className:\"hljs language-ts code-highlight\",children:[(0,e.jsx)(s.span,{className:\"hljs-keyword\",children:\"import\"}),\" {\",(0,e.jsx)(s.span,{className:\"hljs-title class_\",children:\"Modal\"}),\",\",(0,e.jsx)(s.span,{className:\"hljs-title class_\",children:\"TextInput\"}),\"} \",(0,e.jsx)(s.span,{className:\"hljs-keyword\",children:\"from\"}),\" \",(0,e.jsx)(s.span,{className:\"hljs-string\",children:'\"https://deno.land/x/denocordts/mod.ts\"'}),`\n\n`,(0,e.jsx)(s.span,{className:\"hljs-keyword\",children:\"const\"}),\" modal = \",(0,e.jsx)(s.span,{className:\"hljs-keyword\",children:\"new\"}),\" \",(0,e.jsx)(s.span,{className:\"hljs-title class_\",children:\"Modal\"}),`();\n    modal\n      .`,(0,e.jsx)(s.span,{className:\"hljs-title function_\",children:\"setTitle\"}),\"(\",(0,e.jsx)(s.span,{className:\"hljs-string\",children:'\"Test Modal\"'}),`)\n      .`,(0,e.jsx)(s.span,{className:\"hljs-title function_\",children:\"setCustomId\"}),\"(\",(0,e.jsx)(s.span,{className:\"hljs-string\",children:'\"modal\"'}),`)\n      .`,(0,e.jsx)(s.span,{className:\"hljs-title function_\",children:\"addComponents\"}),`(\n        `,(0,e.jsx)(s.span,{className:\"hljs-keyword\",children:\"new\"}),\" \",(0,e.jsx)(s.span,{className:\"hljs-title class_\",children:\"TextInput\"}),`()\n          .`,(0,e.jsx)(s.span,{className:\"hljs-title function_\",children:\"setCustomId\"}),\"(\",(0,e.jsx)(s.span,{className:\"hljs-string\",children:'\"test\"'}),`)\n          .`,(0,e.jsx)(s.span,{className:\"hljs-title function_\",children:\"setLabel\"}),\"(\",(0,e.jsx)(s.span,{className:\"hljs-string\",children:'\"Hmmm\"'}),`)\n          .`,(0,e.jsx)(s.span,{className:\"hljs-title function_\",children:\"setRequired\"}),\"(\",(0,e.jsx)(s.span,{className:\"hljs-literal\",children:\"true\"}),`)\n          .`,(0,e.jsx)(s.span,{className:\"hljs-title function_\",children:\"setPlaceholder\"}),\"(\",(0,e.jsx)(s.span,{className:\"hljs-string\",children:'\"Testing Goes brrr\"'}),`)\n          .`,(0,e.jsx)(s.span,{className:\"hljs-title function_\",children:\"setStyle\"}),\"(\",(0,e.jsx)(s.span,{className:\"hljs-string\",children:'\"Short\"'}),`)\n      );\n    `,(0,e.jsx)(s.span,{className:\"hljs-keyword\",children:\"await\"}),\" interaction.\",(0,e.jsx)(s.span,{className:\"hljs-title function_\",children:\"showModal\"}),`(modal);\n`]})}),`\n`,(0,e.jsxs)(s.p,{children:[\"Modals can only be shown by \",(0,e.jsx)(s.code,{children:\"showModal\"}),\" method present on \",(0,e.jsx)(s.code,{children:\"ApplicationCommandInteraction\"}),\" and \",(0,e.jsx)(s.code,{children:\"ComponentInteraction\"}),\" class.\"]}),`\n`,(0,e.jsxs)(s.p,{children:[\"To receive Modal interactions you should listen to \",(0,e.jsx)(s.code,{children:\"CommandInteraction\"}),\" event and check for \",(0,e.jsx)(s.code,{children:\"interaction.isModalSubmit\"}),\", You should close the modal manually by using \",(0,e.jsx)(s.code,{children:\"closeModal\"}),\" method, the \",(0,e.jsx)(s.code,{children:\"interaction.getModalValues()\"}),\" will provide you with all the details users submitted in the format given below\"]}),`\n`,(0,e.jsx)(s.pre,{className:\"language-ts\",children:(0,e.jsxs)(s.code,{className:\"hljs language-ts code-highlight\",children:[(0,e.jsx)(s.span,{className:\"hljs-keyword\",children:\"type\"}),\" \",(0,e.jsx)(s.span,{className:\"hljs-title class_\",children:\"ModalValues\"}),` = {\n    `,(0,e.jsx)(s.span,{className:\"hljs-attr\",children:\"customId\"}),\":\",(0,e.jsx)(s.span,{className:\"hljs-built_in\",children:\"string\"}),`,\n    `,(0,e.jsx)(s.span,{className:\"hljs-attr\",children:\"type\"}),\":\",(0,e.jsx)(s.span,{className:\"hljs-built_in\",children:\"number\"}),`,\n    `,(0,e.jsx)(s.span,{className:\"hljs-attr\",children:\"value\"}),\":\",(0,e.jsx)(s.span,{className:\"hljs-built_in\",children:\"string\"}),`\n}[]\n`]})}),`\n`,(0,e.jsxs)(s.p,{children:[\"The \",(0,e.jsx)(s.code,{children:\"interaction.getModalValues()\"}),\" will provide you with an array of values, this will follow the order of the \",(0,e.jsx)(s.code,{children:\"TextInput\"}),\" components supplied to \",(0,e.jsx)(s.code,{children:\"Modal.addComponents\"}),\". The \",(0,e.jsx)(s.code,{children:\"value\"}),\" will contain the content supplied by the user.\"]})]})}}var y=_;function M(n,l){throw new Error(\"Expected \"+(l?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return f(b);})();\n;return Component;"},"_id":"modal.mdx","_raw":{"sourceFilePath":"modal.mdx","sourceFileName":"modal.mdx","sourceFileDir":".","contentType":"mdx","flattenedPath":"modal"},"type":"Docs","url":"/docs/modal","createdAt":1656235347424}},"__N_SSG":true}